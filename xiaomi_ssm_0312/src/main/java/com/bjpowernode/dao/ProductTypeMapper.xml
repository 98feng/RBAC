<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.dao.ProductTypeMapper">
  <resultMap id="BaseResultMap" type="com.bjpowernode.domain.ProductType">
    <!--@mbg.generated-->
    <!--@Table product_type-->
    <id column="type_id" property="typeId" />
    <result column="type_name" property="typeName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    type_id, type_name
  </sql>
  <select id="selectByExample" parameterType="com.bjpowernode.domain.ProductTypeExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from product_type
    where type_id = #{typeId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from product_type
    where type_id = #{typeId}
  </delete>
  <delete id="deleteByExample" parameterType="com.bjpowernode.domain.ProductTypeExample">
    <!--@mbg.generated-->
    delete from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="type_id" keyProperty="typeId" parameterType="com.bjpowernode.domain.ProductType" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into product_type (type_name)
    values (#{typeName})
  </insert>
  <insert id="insertSelective" keyColumn="type_id" keyProperty="typeId" parameterType="com.bjpowernode.domain.ProductType" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeName != null">
        type_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typeName != null">
        #{typeName},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjpowernode.domain.ProductTypeExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update product_type
    <set>
      <if test="record.typeId != null">
        type_id = #{record.typeId},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update product_type
    set type_id = #{record.typeId},
      type_name = #{record.typeName}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.domain.ProductType">
    <!--@mbg.generated-->
    update product_type
    <set>
      <if test="typeName != null">
        type_name = #{typeName},
      </if>
    </set>
    where type_id = #{typeId}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.domain.ProductType">
    <!--@mbg.generated-->
    update product_type
    set type_name = #{typeName}
    where type_id = #{typeId}
  </update>
</mapper>